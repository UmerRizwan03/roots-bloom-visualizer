/* src/react-flow-overrides.css */
/* Custom styles for React Flow Controls to ensure visibility in themes */

.react-flow__controls-button svg {
    fill: var(--foreground); /* Use theme's foreground color for SVG icons */
  }
  
  /* You could also add styles for the button itself if they were also problematic, for example: */
  /*
  .react-flow__controls-button {
    background-color: var(--background); // Or var(--card)
    border: 1px solid var(--border);
  }
  .react-flow__controls-button:hover {
    background-color: var(--accent);
  }
  */

/* Styles for node transitions (collapse/expand) */
.react-flow__node {
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out !important;
}

/* When a node is exiting (being hidden), you might want a specific animation */
/* This is harder to achieve directly with React Flow's default behavior as it just removes nodes */
/* However, the opacity transition on the node itself should cover the fade-out. */

/* If nodes had a specific class for 'entering' or 'exiting', those could be targeted. */
/* For now, the general transition on .react-flow__node will apply when nodes are added/removed by React Flow's state updates. */